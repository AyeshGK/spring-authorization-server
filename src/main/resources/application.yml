server:
  port: 9000

logging:
  level:
    org.springframework.security: trace
    org.springframework.security.oauth2: trace

spring:
  datasource:
    url: jdbc:postgresql://localhost:6500/spring-hydra
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          google-idp:
            provider: google
            client-secret: ${GOOGLE_CLIENT_SECRET:your_client_secret}
            client-id: ${GOOGLE_CLIENT_ID:your_client_id}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: oauth2-tutorial-client
        provider:
          google:
            user-name-attribute: email
